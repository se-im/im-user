<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.im.user.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.im.user.entity.po.User">

        <!-- 用户表id -->
        <id column="id" jdbcType="BIGINT" property="id"/>

        <!-- 用户名 -->
        <result column="username" jdbcType="VARCHAR" property="username"/>

        <!-- 用户密码，MD5加密 -->
        <result column="password" jdbcType="VARCHAR" property="password"/>

        <!-- 个人简介 -->
        <result column="description" jdbcType="VARCHAR" property="description"/>

        <!-- 邮箱 -->
        <result column="email" jdbcType="VARCHAR" property="email"/>

        <!-- 电话 -->
        <result column="phone" jdbcType="VARCHAR" property="phone"/>

        <!-- 生日 -->
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>

        <!-- 用户头像 -->
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>

        <!-- 角色0-员工,1-管理员， 2-会议室管理员 -->
        <result column="role" jdbcType="INTEGER" property="role"/>

        <!-- 创建时间 -->
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

        <!-- 最后一次更新时间 -->
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>

        <!-- 是否删除，0-没有, 1-已删除 -->
        <result column="deleted" jdbcType="TINYINT" property="deleted"/>

        <!-- 性别：0 男 1 女 -->
        <result column="gender" jdbcType="TINYINT" property="gender"/>

        <!-- 陌生人是否可以看到 0-可以  1-不可以 -->
        <result column="shown" jdbcType="TINYINT" property="shown"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , username, password, description, email, phone, birthday, avatar_url, role, create_time,
    update_time, deleted, gender, shown
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from im_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from im_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <update id="deleteLogicByPrimaryKey" parameterType="java.lang.Long">
        update im_user
        set deleted = 1
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="insert">
        insert into im_user (id, username, password,
                             description, email, phone,
                             birthday, avatar_url, role,
                             create_time, update_time, deleted,
                             gender, shown)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{description,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{birthday,jdbcType=TIMESTAMP}, #{avatarUrl,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=TINYINT},
                #{gender,jdbcType=TINYINT}, #{shown,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective">
        insert into im_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="avatarUrl != null">
                avatar_url,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="shown != null">
                shown,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=TINYINT},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=TINYINT},
            </if>
            <if test="shown != null">
                #{shown,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective">
        update im_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=TINYINT},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="shown != null">
                shown = #{shown,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey">
        update im_user
        set username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            phone       = #{phone,jdbcType=VARCHAR},
            birthday    = #{birthday,jdbcType=TIMESTAMP},
            avatar_url  = #{avatarUrl,jdbcType=VARCHAR},
            role        = #{role,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            deleted     = #{deleted,jdbcType=TINYINT},
            gender      = #{gender,jdbcType=TINYINT},
            shown       = #{shown,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updatePasswordByPrimaryKey">
        update im_user
        set password = #{password,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- Generate time: 2020-08-07 09:23:10 ### -->


    <select id="selectPasswordByUsername" resultType="java.lang.String">
        select password
        from im_user
        where username = #{username}
    </select>

    <select id="selectUserByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from im_user
        where username = #{username}
    </select>

    <select id="getBatchProfileById" resultType="com.im.user.entity.vo.UserProfileVo" parameterType="list">
        select id as userId, username as nick, avatar_url
        from im_user u
        where id in
        <foreach item="item" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!-- Your codes goes here!!! -->

</mapper>